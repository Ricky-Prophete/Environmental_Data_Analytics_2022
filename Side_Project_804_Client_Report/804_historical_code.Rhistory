bar_chart3 <- ggplot(Savings.Method.By.Banking.Status, aes(x = reorder(Banking, +Percent), y = Percent, fill = Savings))+
geom_bar(stat = 'identity', width = 0.7, position = "dodge") +
geom_text(aes(label=Percent),hjust=-0.5, position = "dodge")+
scale_fill_hue(c = 40) +
labs(title = "Savings Methods for Households by Banking Status, 2017")+
#scale_x_discrete("Banking Status")+
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 13), axis.title.x = element_blank(), axis.title.y = element_blank())+
theme(plot.title = element_text(hjust = 0.5))+
theme(legend.position = "right")+
coord_flip()
plot(bar_chart3)
bar_chart3 <- ggplot(Savings.Method.By.Banking.Status, aes(x = reorder(Banking, +Percent), y = Percent, fill = Savings))+
geom_bar(stat = 'identity', width = 0.7, position = "dodge") +
geom_text(aes(label=Percent),hjust=-0.5, position_dodge(width = 0.7))+
scale_fill_hue(c = 40) +
labs(title = "Savings Methods for Households by Banking Status, 2017")+
#scale_x_discrete("Banking Status")+
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 13), axis.title.x = element_blank(), axis.title.y = element_blank())+
theme(plot.title = element_text(hjust = 0.5))+
theme(legend.position = "right")+
coord_flip()
plot(bar_chart3)
bar_chart3 <- ggplot(Savings.Method.By.Banking.Status, aes(x = reorder(Banking, +Percent), y = Percent, fill = Savings))+
geom_bar(stat = 'identity', width = 0.7, position = "dodge") +
geom_text(aes(label=Percent),hjust=-0.5, position_dodge(width = '?'))+
scale_fill_hue(c = 40) +
labs(title = "Savings Methods for Households by Banking Status, 2017")+
#scale_x_discrete("Banking Status")+
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 13), axis.title.x = element_blank(), axis.title.y = element_blank())+
theme(plot.title = element_text(hjust = 0.5))+
theme(legend.position = "right")+
coord_flip()
plot(bar_chart3)
bar_chart3 <- ggplot(Savings.Method.By.Banking.Status, aes(x = reorder(Banking, +Percent), y = Percent, fill = Savings))+
geom_bar(stat = 'identity', width = 0.7, position = "dodge") +
geom_text(aes(label=Percent),hjust=-0.5, position_dodge(width = 0.7))+
scale_fill_hue(c = 40) +
labs(title = "Savings Methods for Households by Banking Status, 2017")+
#scale_x_discrete("Banking Status")+
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 13), axis.title.x = element_blank(), axis.title.y = element_blank())+
theme(plot.title = element_text(hjust = 0.5))+
theme(legend.position = "right")+
coord_flip()
plot(bar_chart3)
bar_chart3 <- ggplot(Savings.Method.By.Banking.Status, aes(x = reorder(Banking, +Percent), y = Percent, fill = Savings))+
geom_bar(stat = 'identity', width = 0.7)#, position = "dodge") +
#geom_text(aes(label=Percent),hjust=-0.5, position_dodge(width = 0.7))+
scale_fill_hue(c = 40) +
labs(title = "Savings Methods for Households by Banking Status, 2017")+
#scale_x_discrete("Banking Status")+
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 13), axis.title.x = element_blank(), axis.title.y = element_blank())+
theme(plot.title = element_text(hjust = 0.5))+
theme(legend.position = "right")+
coord_flip()
plot(bar_chart3)
bar_chart3 <- ggplot(Savings.Method.By.Banking.Status, aes(x = reorder(Banking, +Percent), y = Percent, fill = Savings))+
geom_bar(stat = 'identity', width = 0.7)+#, position = "dodge") +
#geom_text(aes(label=Percent),hjust=-0.5, position_dodge(width = 0.7))+
scale_fill_hue(c = 40) +
labs(title = "Savings Methods for Households by Banking Status, 2017")+
#scale_x_discrete("Banking Status")+
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 13), axis.title.x = element_blank(), axis.title.y = element_blank())+
theme(plot.title = element_text(hjust = 0.5))+
theme(legend.position = "right")+
coord_flip()
plot(bar_chart3)
bar_chart3 <- ggplot(Savings.Method.By.Banking.Status, aes(x = reorder(Banking, +Percent), y = Percent, fill = Savings))+
geom_bar(stat = 'identity', width = 0.7, position = "dodge") +
#geom_text(aes(label=Percent),hjust=-0.5, position_dodge(width = 0.7))+
scale_fill_hue(c = 40) +
labs(title = "Savings Methods for Households by Banking Status, 2017")+
#scale_x_discrete("Banking Status")+
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 13), axis.title.x = element_blank(), axis.title.y = element_blank())+
theme(plot.title = element_text(hjust = 0.5))+
theme(legend.position = "right")+
coord_flip()
plot(bar_chart3)
bar_chart3 <- ggplot(Savings.Method.By.Banking.Status, aes(x = reorder(Banking, -Percent), y = Percent, fill = Savings))+
geom_bar(stat = 'identity', width = 0.7, position = "dodge") +
#geom_text(aes(label=Percent),hjust=-0.5, position_dodge(width = 0.7))+
scale_fill_hue(c = 40) +
labs(title = "Savings Methods for Households by Banking Status, 2017")+
#scale_x_discrete("Banking Status")+
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 13), axis.title.x = element_blank(), axis.title.y = element_blank())+
theme(plot.title = element_text(hjust = 0.5))+
theme(legend.position = "right")+
coord_flip()
plot(bar_chart3)
bar_chart3 <- ggplot(Savings.Method.By.Banking.Status, aes(x = reorder(Banking, +Percent), y = Percent, fill = Savings))+
geom_bar(stat = 'identity', width = 0.7, position = "dodge") +
#geom_text(aes(label=Percent),hjust=-0.5, position_dodge(width = 0.7))+
scale_fill_hue(c = 40) +
labs(title = "Savings Methods for Households by Banking Status, 2017")+
#scale_x_discrete("Banking Status")+
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 13), axis.title.x = element_blank(), axis.title.y = element_blank())+
theme(plot.title = element_text(hjust = 0.5))+
theme(legend.position = "right")+
coord_flip()
plot(bar_chart3)
View(Savings.Method.By.Banking.Status)
bar_chart3 <- ggplot(Savings.Method.By.Banking.Status, aes(x = reorder(Percent, +Percent), y = Percent, fill = Savings))+
geom_bar(stat = 'identity', width = 0.7, position = "dodge") +
#geom_text(aes(label=Percent),hjust=-0.5, position_dodge(width = 0.7))+
scale_fill_hue(c = 40) +
labs(title = "Savings Methods for Households by Banking Status, 2017")+
#scale_x_discrete("Banking Status")+
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 13), axis.title.x = element_blank(), axis.title.y = element_blank())+
theme(plot.title = element_text(hjust = 0.5))+
theme(legend.position = "right")+
coord_flip()
plot(bar_chart3)
bar_chart3 <- ggplot(Savings.Method.By.Banking.Status, aes(x = reorder(Banking, +Percent), y = Percent, fill = Savings))+
geom_bar(stat = 'identity', width = 0.7, position = "dodge") +
#geom_text(aes(label=Percent),hjust=-0.5, position_dodge(width = 0.7))+
scale_fill_hue(c = 40) +
labs(title = "Savings Methods for Households by Banking Status, 2017")+
#scale_x_discrete("Banking Status")+
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 13), axis.title.x = element_blank(), axis.title.y = element_blank())+
theme(plot.title = element_text(hjust = 0.5))+
theme(legend.position = "right")+
coord_flip()
plot(bar_chart3)
Banking.Status.By.Income <- read.csv('/Users/ricpro/Documents/Duke MPP Coursework/Spring 2022/Policy Analysis II 804/Client Report Data/Banking Status by Income.csv', stringsAsFactors = TRUE) %>%
Unbanked.by.Year <- read.csv('/Users/ricpro/Documents/Duke MPP Coursework/Spring 2022/Policy Analysis II 804/Client Report Data/Household Unbanked Rate by Year.csv', stringsAsFactors = TRUE)
Banking.Status.By.Income <- read.csv('/Users/ricpro/Documents/Duke MPP Coursework/Spring 2022/Policy Analysis II 804/Client Report Data/Banking Status by Income.csv', stringsAsFactors = TRUE) %>%
Unbanked.by.Year <- read.csv('/Users/ricpro/Documents/Duke MPP Coursework/Spring 2022/Policy Analysis II 804/Client Report Data/Household Unbanked Rate by Year.csv', stringsAsFactors = TRUE)
Unbanked.by.Year <- read.csv('/Users/ricpro/Documents/Duke MPP Coursework/Spring 2022/Policy Analysis II 804/Client Report Data/Household Unbanked Rate by Year.csv', stringsAsFactors = TRUE)
bar_chart7 <- ggplot(Unbanked.by.Year, aes(x = Year, y = Percent))+
geom_bar(stat = 'identity', width = 0.7, position = "dodge", fill = "#1565C0") +
geom_text(aes(label=Percent),hjust=-0.5)+
labs(title = "Percent Unbanked by Year, 2009 - 2019")+
#scale_x_discrete("Banking Status")+
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 13), axis.title.y = element_blank(), axis.title.x = element_blank())+
theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))+
#theme(legend.position = "right")+
#coord_flip()
plot(bar_chart7)
bar_chart7 <- ggplot(Unbanked.by.Year, aes(x = Year, y = Percent))+
geom_bar(stat = 'identity', width = 0.7, position = "dodge", fill = "#1565C0") +
geom_text(aes(label=Percent),hjust=-0.5)+
labs(title = "Percent Unbanked by Year, 2009 - 2019")+
#scale_x_discrete("Banking Status")+
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 13), axis.title.y = element_blank(), axis.title.x = element_blank())+
theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
#theme(legend.position = "right")+
#coord_flip()
plot(bar_chart7)
bar_chart7 <- ggplot(Unbanked.by.Year, aes(x = Year, y = Percent))+
geom_bar(stat = 'identity', width = 0.7, position = "dodge", fill = "#1565C0") +
geom_text(aes(label=Percent),vjust=-0.5)+
labs(title = "Percent Unbanked by Year, 2009 - 2019")+
#scale_x_discrete("Banking Status")+
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 13), axis.title.y = element_blank(), axis.title.x = element_blank())+
theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
#theme(legend.position = "right")+
#coord_flip()
plot(bar_chart7)
bar_chart7 <- ggplot(Unbanked.by.Year, aes(x = Year, y = Percent))+
geom_bar(stat = 'identity', width = 0.9, position = "dodge", fill = "#1565C0") +
geom_text(aes(label=Percent),vjust=-0.5)+
labs(title = "Unbanked Rate by Year, 2009 - 2019")+
#scale_x_discrete("Banking Status")+
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 13), axis.title.y = element_blank(), axis.title.x = element_blank())+
theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
#theme(legend.position = "right")+
#coord_flip()
plot(bar_chart7)
bar_chart7 <- ggplot(Unbanked.by.Year, aes(x = as.character(Year), y = Percent))+
geom_bar(stat = 'identity', width = 0.9, position = "dodge", fill = "#1565C0") +
geom_text(aes(label=Percent),vjust=-0.5)+
labs(title = "Unbanked Rate by Year, 2009 - 2019")+
#scale_x_discrete("Banking Status")+
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 13), axis.title.y = element_blank(), axis.title.x = element_blank())+
theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
#theme(legend.position = "right")+
#coord_flip()
plot(bar_chart7)
bar_chart7 <- ggplot(Unbanked.by.Year, aes(x = as.character(Year), y = Percent))+
geom_bar(stat = 'identity', width = 0.7, position = "dodge", fill = "#1565C0") +
geom_text(aes(label=Percent),vjust=-0.5)+
labs(title = "Unbanked Rate by Year, 2009 - 2019")+
#scale_x_discrete("Banking Status")+
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 13), axis.title.y = element_blank(), axis.title.x = element_blank())+
theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
#theme(legend.position = "right")+
#coord_flip()
plot(bar_chart7)
bar_chart7 <- ggplot(Unbanked.by.Year, aes(x = as.character(Year), y = Percent))+
geom_bar(stat = 'identity', width = 0.7, position = "dodge", fill = "#1565C0") +
geom_text(aes(label=Percent))+#,vjust=-0.5)+
labs(title = "Unbanked Rate by Year, 2009 - 2019")+
#scale_x_discrete("Banking Status")+
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 13), axis.title.y = element_blank(), axis.title.x = element_blank())+
theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
#theme(legend.position = "right")+
#coord_flip()
plot(bar_chart7)
bar_chart7 <- ggplot(Unbanked.by.Year, aes(x = as.character(Year), y = Percent))+
geom_bar(stat = 'identity', width = 0.7, position = "dodge", fill = "#1565C0") +
geom_text(aes(label=Percent),vjust=0.5)+
labs(title = "Unbanked Rate by Year, 2009 - 2019")+
#scale_x_discrete("Banking Status")+
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 13), axis.title.y = element_blank(), axis.title.x = element_blank())+
theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
#theme(legend.position = "right")+
#coord_flip()
plot(bar_chart7)
bar_chart7 <- ggplot(Unbanked.by.Year, aes(x = as.character(Year), y = Percent))+
geom_bar(stat = 'identity', width = 0.7, position = "dodge", fill = "#1565C0") +
geom_text(aes(label=Percent), vjust=0.5)+
labs(title = "Unbanked Rate by Year, 2009 - 2019")+
#scale_x_discrete("Banking Status")+
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 13), axis.title.y = element_blank(), axis.title.x = element_blank())+
theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
#theme(legend.position = "right")+
#coord_flip()
plot(bar_chart7)
bar_chart7 <- ggplot(Unbanked.by.Year, aes(x = as.character(Year), y = Percent))+
geom_bar(stat = 'identity', width = 0.7, position = "dodge", fill = "#1565C0") +
geom_text(aes(label=Percent), vjust= +0.5)+
labs(title = "Unbanked Rate by Year, 2009 - 2019")+
#scale_x_discrete("Banking Status")+
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 13), axis.title.y = element_blank(), axis.title.x = element_blank())+
theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
#theme(legend.position = "right")+
#coord_flip()
plot(bar_chart7)
bar_chart7 <- ggplot(Unbanked.by.Year, aes(x = as.character(Year), y = Percent))+
geom_bar(stat = 'identity', width = 0.7, position = "dodge", fill = "#1565C0") +
geom_text(aes(label=Percent), vjust= -0.5)+
labs(title = "Unbanked Rate by Year, 2009 - 2019")+
#scale_x_discrete("Banking Status")+
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 13), axis.title.y = element_blank(), axis.title.x = element_blank())+
theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
#theme(legend.position = "right")+
#coord_flip()
plot(bar_chart7)
library(tidyverse)
library(lubridate)
library(knitr)
new_theme <- theme_bw(base_size = 13) +
theme(axis.text = element_text(color = "black"),
legend.position = "none")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), axis.line = element_line(colour = "black"))
theme_set(new_theme)
getwd()
library(tidyverse)
library(lubridate)
library(knitr)
new_theme <- theme_bw(base_size = 13) +
theme(axis.text = element_text(color = "black"),
legend.position = "none")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), axis.line = element_line(colour = "black"))
theme_set(new_theme)
getwd()
setwd("~/Documents/Duke MPP Coursework/Spring 2022/Environmental Data Analysis 872/Environmental_Data_Analytics_2022")
getwd()
setwd("~/Documents/Duke MPP Coursework/Spring 2022/Environmental Data Analysis 872/Environmental_Data_Analytics_2022")
getwd()
Nutrients.raw <- read.csv('./Data/Raw/he NTL-LTER_Lake_Nutrients_Raw.csv', stringsAsFactors = TRUE)
Nutrients.raw <- read.csv('../Data/Raw/he NTL-LTER_Lake_Nutrients_Raw.csv', stringsAsFactors = TRUE)
Nutrients.raw <- read.csv('./Data/Raw/NTL-LTER_Lake_Nutrients_Raw.csv', stringsAsFactors = TRUE)
Nutrients.raw <- read.csv('../Data/Raw/NTL-LTER_Lake_Nutrients_Raw.csv', stringsAsFactors = TRUE)
head(Nutrients.raw)
Nutrients.raw$sampledate <- as.Date(Nutrients.raw$sampledate, format = '%m/%d/%y')
Nutrients.processed <- Nutrients.raw %>% select(lakeid, depth_id, comments) %>%
filter(depth == 0) %>%
drop_na()
Nutrients.processed <- Nutrients.raw %>% select(lakeid, depth_id, comments) %>%
filter(depth_id == 0) %>%
drop_na()
View(Nutrients.processed)
View(Nutrients.raw)
Nutrients.processed <- Nutrients.raw %>% select(-c(lakeid, depth_id, comments)) %>%
filter(depth_id == 0) %>%
drop_na()
Nutrients.processed <- Nutrients.raw %>% select(-c(lakeid, depth_id, comments)) %>%
filter(depth == 0) %>%
drop_na()
Nutrients.summary <- Nutrients.processed %>% group_by(lakename) %>%
summarize(mean_tn_ug = mean(tn_ug),
min_tn_ug = min(tn_ug),
max_tn_ug = max(tn_ug),
sd_tn_ug = sd(tn_ug))
View(Nutrients.summary)
Nutrients.summary.tn_ug <- Nutrients.processed %>% group_by(lakename) %>%
summarize(mean_tn_ug = mean(tn_ug),
min_tn_ug = min(tn_ug),
max_tn_ug = max(tn_ug),
sd_tn_ug = sd(tn_ug))
Nutrients.summary.tp_ug <- Nutrients.processed %>% group_by(lakename) %>%
summarize(mean_tp_ug = mean(tp_ug),
min_tn_ug = min(tp_ug),
max_tn_ug = max(tp_ug),
sd_tn_ug = sd(tp_ug))
Nitrogen.table <- kbl(Nutrients.summary.tn_ug, caption = 'Table 2: Surface Samples: Total Nitrogen')
Nitrogen.table <- kable(Nutrients.summary.tn_ug, caption = 'Table 2: Surface Samples: Total Nitrogen') %>%
kable_classic_2()
print(Nitrogen.table)
library(kableExtra)
Nitrogen.table <- kable(Nutrients.summary.tn_ug, caption = 'Table 2: Surface Samples: Total Nitrogen') %>%
kable_classic()
print(Nitrogen.table)
library(kableExtra)
library(kableExtra)
library(kableExtra)
library(kableExtra)
library(kableExtra)
detach("package:kableExtra", unload = TRUE)
library(kableExtra)
Banking.Status.By.Income <- read.csv('/Users/ricpro/Documents/Duke MPP Coursework/Spring 2022/Policy Analysis II 804/Client Report Data/Banking Status by Income.csv', stringsAsFactors = TRUE) %>%
Unbanked.Rates.Multi.Dimension.2019.17 <- read.csv('/Users/ricpro/Documents/Duke MPP Coursework/Spring 2022/Policy Analysis II 804/Client Report Data/Unbanked_for_Nation_MultiYear_by_Selected_Household_Characteristics.csv', stringsAsFactors = FALSE) %>%
rename("Row Variables" = "Row.Variables")
Banking.Status.By.Income <- read.csv('/Users/ricpro/Documents/Duke MPP Coursework/Spring 2022/Policy Analysis II 804/Client Report Data/Banking Status by Income.csv', stringsAsFactors = TRUE) %>%
Unbanked.Rates.Multi.Dimension.2019.17 <- read.csv('/Users/ricpro/Documents/Duke MPP Coursework/Spring 2022/Policy Analysis II 804/Client Report Data/Unbanked_for_Nation_MultiYear_by_Selected_Household_Characteristics.csv', stringsAsFactors = FALSE)
Banking.Status.By.Income <- read.csv('/Users/ricpro/Documents/Duke MPP Coursework/Spring 2022/Policy Analysis II 804/Client Report Data/Banking Status by Income.csv', stringsAsFactors = TRUE) %>%
Unbanked.Rates.Multi.Dimension.2019.17 <- read.csv('/Users/ricpro/Documents/Duke MPP Coursework/Spring 2022/Policy Analysis II 804/Client Report Data/Unbanked_for_Nation_MultiYear_by_Selected_Household_Characteristics.csv', stringsAsFactors = FALSE)
Unbanked.Rates.Multi.Dimension.2019.17 <- read.csv('/Users/ricpro/Documents/Duke MPP Coursework/Spring 2022/Policy Analysis II 804/Client Report Data/Unbanked_for_Nation_MultiYear_by_Selected_Household_Characteristics.csv', stringsAsFactors = FALSE)
table1 <- kbl(Unbanked.Rates.Multi.Dimension.2019.17) %>%
kable_classic_2(bootstrap_options = c("striped", "hover", "condensed"), html_font = "Times New Roman") %>%
add_header_above(c(' ' = 1, '2019' = 3, '2017' = 4)) %>%
pack_rows("Race/Ethnicity", 2, 8) %>%
pack_rows("Age Group", 9, 14) %>%
pack_rows("Education", 15, 18) %>%
pack_rows("Employment Status", 19, 21) %>%
pack_rows("Income", 22, 26) %>%
pack_rows("Disability Status", 27, 28)
print(table1)
Nitrogen.table <- kbl(Nutrients.summary.tn_ug)
show(Nitrogen.table)
getwd()
library(tidyverse)
library(lubridate)
library(knitr)
new_theme <- theme_bw(base_size = 13) +
theme(axis.text = element_text(color = "black"),
legend.position = "none")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), axis.line = element_line(colour = "black"))
theme_set(new_theme)
Nutrients.raw <- read.csv('../Data/Raw/NTL-LTER_Lake_Nutrients_Raw.csv', stringsAsFactors = TRUE)
head(Nutrients.raw)
Nutrients.raw$sampledate <- as.Date(Nutrients.raw$sampledate, format = '%m/%d/%y')
Nitrogen.table <- kable(Nutrients.summary.tn_ug, caption = 'Table 2: Surface Samples: Total Nitrogen', format = 'simple')
getwd()
library(tidyverse)
library(lubridate)
library(knitr)
new_theme <- theme_bw(base_size = 13) +
theme(axis.text = element_text(color = "black"),
legend.position = "none")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), axis.line = element_line(colour = "black"))
theme_set(new_theme)
Nutrients.raw <- read.csv('../Data/Raw/NTL-LTER_Lake_Nutrients_Raw.csv', stringsAsFactors = TRUE)
head(Nutrients.raw)
Nutrients.raw$sampledate <- as.Date(Nutrients.raw$sampledate, format = '%m/%d/%y')
Nutrients.processed <- Nutrients.raw %>% select(-c(lakeid, depth_id, comments)) %>%
filter(depth == 0) %>%
drop_na()
#Summary stats for total nitrogen
Nutrients.summary.tn_ug <- Nutrients.processed %>% group_by(lakename) %>%
summarize(mean_tn_ug = mean(tn_ug),
min_tn_ug = min(tn_ug),
max_tn_ug = max(tn_ug),
sd_tn_ug = sd(tn_ug))
#Summary stats for total phosphorus
Nutrients.summary.tp_ug <- Nutrients.processed %>% group_by(lakename) %>%
summarize(mean_tp_ug = mean(tp_ug),
min_tn_ug = min(tp_ug),
max_tn_ug = max(tp_ug),
sd_tn_ug = sd(tp_ug))
Nitrogen.table <- kable(Nutrients.summary.tn_ug, caption = 'Table 2: Surface Samples: Total Nitrogen', format = 'simple')
show(Nitrogen.table)
Phosphorus.table <- kable(Nutrients.summary.tp_ug, caption = 'Table 3: Surface Samples: Total Phosphorous')
show(Phosphorus.table)
Nitrogen.table <- kable(Nutrients.summary.tn_ug, caption = 'Table 2: Surface Samples: Total Nitrogen', format = 'classic')
install.packages("kableExtra")
Nitrogen.table <- kable(Nutrients.summary.tn_ug, caption = 'Table 2: Surface Samples: Total Nitrogen', format = 'classic')
Nitrogen.table <- kable(Nutrients.summary.tn_ug, caption = 'Table 2: Surface Samples: Total Nitrogen') %>%
kable_classic()
library(kableExtra)
Nitrogen.table <- kable(Nutrients.summary.tn_ug, caption = 'Table 2: Surface Samples: Total Nitrogen') %>%
kable_classic()
show(Nitrogen.table)
getwd()
library(tidyverse)
library(lubridate)
library(knitr)
new_theme <- theme_bw(base_size = 13) +
theme(axis.text = element_text(color = "black"),
legend.position = "none")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), axis.line = element_line(colour = "black"))
theme_set(new_theme)
Nutrients.raw <- read.csv('../Data/Raw/NTL-LTER_Lake_Nutrients_Raw.csv', stringsAsFactors = TRUE)
head(Nutrients.raw)
Nutrients.raw$sampledate <- as.Date(Nutrients.raw$sampledate, format = '%m/%d/%y')
Nitrogen.table <- kbl(Nutrients.summary.tn_ug, format = 'simple', caption = 'Table 2: Surface Samples: Total Nitrogen')
show(Nitrogen.table)
show(Nitrogen.table)
show(Phosphorus.table)
install.packages('knitr')
library(knitr)
plot1 <- ggplot(data = Nutrients.processed, aes(x=sampledate,y=tn_ug,color=lakename)) +
geom_point(alpha=0.3) +
geom_smooth(se=F) +
labs(title ='Total Nitrogen over time',
x = 'Date',
y = expression(paste('Total N (',mu,'g)')),
color = 'Lake')
plot(plot1)
new_theme <- theme_bw(base_size = 13) +
theme(axis.text = element_text(color = "black"),
legend.position = "right")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), axis.line = element_line(colour = "black"))
theme_set(new_theme)
plot1 <- ggplot(data = Nutrients.processed, aes(x=sampledate,y=tn_ug,color=lakename)) +
geom_point(alpha=0.3) +
geom_smooth(se=F) +
labs(title ='Total Nitrogen over time',
x = 'Date',
y = expression(paste('Total N (',mu,'g)')),
color = 'Lake')
plot(plot1)
plot(plot1)
plot2 <- ggplot(data = Nutrients.processed, aes(x=sampledate,y=tp_ug,color=lakename)) +
geom_point(alpha=0.5) +
geom_smooth(se=FALSE) +
labs(title ='Total Phosphorus over time',
x = 'Date',
y = expression(paste('Total N (',mu,'g)')),
color = 'Lake')
plot(plot2)
View(Nutrients.processed)
shiny::runApp('Lessons/11_Part2_Dashboards_RShiny/PeterPaulApp_Simple')
plot1 <- ggplot(data = Nutrients.processed, aes(x=sampledate,y=tn_ug,color=lakename)) +
geom_point(alpha=0.5) +
geom_smooth(se=FALSE)
plot1 <- ggplot(data = Nutrients.processed, aes(x=sampledate,y=tn_ug,color=lakename)) +
geom_point(alpha=0.5) +
geom_smooth(se=FALSE)
getwd()
library(tidyverse)
library(lubridate)
library(knitr)
new_theme <- theme_bw(base_size = 13) +
theme(axis.text = element_text(color = "black"),
legend.position = "right")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), axis.line = element_line(colour = "black"))
theme_set(new_theme)
Nutrients.raw <- read.csv('../Data/Raw/NTL-LTER_Lake_Nutrients_Raw.csv', stringsAsFactors = TRUE)
head(Nutrients.raw)
Nutrients.raw$sampledate <- as.Date(Nutrients.raw$sampledate, format = '%m/%d/%y')
plot1 <- ggplot(data = Nutrients.processed, aes(x=sampledate,y=tn_ug,color=lakename)) +
geom_point(alpha=0.5) +
geom_smooth(se=FALSE) +
labs(title = "Total Nitrogen Over Time", x = 'Date', y = "Total Nitrogen", color = 'Lake')
getwd()
library(tidyverse)
library(lubridate)
library(knitr)
new_theme <- theme_bw(base_size = 13) +
theme(axis.text = element_text(color = "black"),
legend.position = "right")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), axis.line = element_line(colour = "black"))
theme_set(new_theme)
Nutrients.raw <- read.csv('../Data/Raw/NTL-LTER_Lake_Nutrients_Raw.csv', stringsAsFactors = TRUE)
head(Nutrients.raw)
Nutrients.raw$sampledate <- as.Date(Nutrients.raw$sampledate, format = '%m/%d/%y')
Nutrients.processed <- Nutrients.raw %>% select(-c(lakeid, depth_id, comments)) %>%
filter(depth == 0) %>%
drop_na()
#Summary stats for total nitrogen
Nutrients.summary.tn_ug <- Nutrients.processed %>% group_by(lakename) %>%
summarize(mean_tn_ug = mean(tn_ug),
min_tn_ug = min(tn_ug),
max_tn_ug = max(tn_ug),
sd_tn_ug = sd(tn_ug))
#Summary stats for total phosphorus
Nutrients.summary.tp_ug <- Nutrients.processed %>% group_by(lakename) %>%
summarize(mean_tp_ug = mean(tp_ug),
min_tn_ug = min(tp_ug),
max_tn_ug = max(tp_ug),
sd_tn_ug = sd(tp_ug))
Nitrogen.table <- kable(Nutrients.summary.tn_ug, format = 'simple', caption = 'Table 2: Surface Samples: Total Nitrogen')
show(Nitrogen.table)
Phosphorus.table <- kable(Nutrients.summary.tp_ug, caption = 'Table 3: Surface Samples: Total Phosphorous', format = 'simple')
show(Phosphorus.table)
plot1 <- ggplot(data = Nutrients.processed, aes(x=sampledate,y=tn_ug,color=lakename)) +
geom_point(alpha=0.5) +
geom_smooth(se=FALSE) +
labs(title = "Total Nitrogen Over Time", x = 'Date', y = "Total Nitrogen", color = 'Lake')
plot(plot1)
plot2 <- ggplot(data = Nutrients.processed, aes(x=sampledate,y=tp_ug,color=lakename)) +
geom_point(alpha=0.5) +
geom_smooth(se=FALSE) +
labs(title = "Total Phosphorus Over Time", x = "Date", y = "Total Phosphorus", color "Lake")
plot2 <- ggplot(data = Nutrients.processed, aes(x=sampledate,y=tp_ug,color=lakename)) +
geom_point(alpha=0.5) +
geom_smooth(se=FALSE) +
labs(title = "Total Phosphorus Over Time", x = "Date", y = "Total Phosphorus", color = "Lake")
plot(plot2)
shiny::runApp('Lessons/11_Part2_Dashboards_RShiny/PeterPaulApp_Full')
Nitrogen.table <- kable(Nutrients.summary.tn_ug, caption = "Table 2: Surface Samples: Total Nitrogen")
show(Nitrogen.table)
library(knitr)
